@import './variables';

// Fade
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

.fade-enter {
  animation: fadeIn $transition-duration $transition-timing;
}

.fade-exit {
  animation: fadeOut $transition-duration $transition-timing;
}

// Slide
@keyframes slideInUp {
  from {
    transform: translateY(20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slideInDown {
  from {
    transform: translateY(-20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slideInLeft {
  from {
    transform: translateX(-20px);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes slideInRight {
  from {
    transform: translateX(20px);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

.slide-up {
  animation: slideInUp $transition-duration $transition-timing;
}

.slide-down {
  animation: slideInDown $transition-duration $transition-timing;
}

.slide-left {
  animation: slideInLeft $transition-duration $transition-timing;
}

.slide-right {
  animation: slideInRight $transition-duration $transition-timing;
}

// Scale
@keyframes scaleIn {
  from {
    transform: scale(0.9);
    opacity: 0;
  }
  to {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes scaleOut {
  from {
    transform: scale(1);
    opacity: 1;
  }
  to {
    transform: scale(0.9);
    opacity: 0;
  }
}

.scale-enter {
  animation: scaleIn $transition-duration $transition-timing;
}

.scale-exit {
  animation: scaleOut $transition-duration $transition-timing;
}

// Rotate
@keyframes rotateIn {
  from {
    transform: rotate(-180deg) scale(0);
    opacity: 0;
  }
  to {
    transform: rotate(0) scale(1);
    opacity: 1;
  }
}

@keyframes rotateOut {
  from {
    transform: rotate(0) scale(1);
    opacity: 1;
  }
  to {
    transform: rotate(180deg) scale(0);
    opacity: 0;
  }
}

.rotate-enter {
  animation: rotateIn $transition-duration $transition-timing;
}

.rotate-exit {
  animation: rotateOut $transition-duration $transition-timing;
}

// Bounce
@keyframes bounceIn {
  0% {
    transform: scale(0.3);
    opacity: 0;
  }
  50% {
    transform: scale(1.05);
    opacity: 0.8;
  }
  70% {
    transform: scale(0.9);
    opacity: 0.9;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes bounceOut {
  0% {
    transform: scale(1);
    opacity: 1;
  }
  20% {
    transform: scale(0.9);
    opacity: 0.9;
  }
  50% {
    transform: scale(1.05);
    opacity: 0.8;
  }
  100% {
    transform: scale(0.3);
    opacity: 0;
  }
}

.bounce-enter {
  animation: bounceIn $transition-duration $transition-timing;
}

.bounce-exit {
  animation: bounceOut $transition-duration $transition-timing;
}

// Shake
@keyframes shake {
  0%, 100% {
    transform: translateX(0);
  }
  10%, 30%, 50%, 70%, 90% {
    transform: translateX(-5px);
  }
  20%, 40%, 60%, 80% {
    transform: translateX(5px);
  }
}

.shake {
  animation: shake 0.5s $transition-timing;
}

// Pulse
@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}

.pulse {
  animation: pulse 1s $transition-timing infinite;
}

// Spin
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.spin {
  animation: spin 1s linear infinite;
}

// Classes utilitárias
.animate {
  &--fast {
    animation-duration: calc($transition-duration * 0.5);
  }

  &--slow {
    animation-duration: calc($transition-duration * 2);
  }

  &--infinite {
    animation-iteration-count: infinite;
  }

  &--delay {
    &-1 {
      animation-delay: calc($transition-duration * 0.25);
    }

    &-2 {
      animation-delay: calc($transition-duration * 0.5);
    }

    &-3 {
      animation-delay: calc($transition-duration * 0.75);
    }

    &-4 {
      animation-delay: $transition-duration;
    }
  }
}

// Animações de transição
.transition {
  &-all {
    transition-property: all;
    transition-duration: $transition-duration;
    transition-timing-function: $transition-timing;
  }

  &-transform {
    transition-property: transform;
    transition-duration: $transition-duration;
    transition-timing-function: $transition-timing;
  }

  &-opacity {
    transition-property: opacity;
    transition-duration: $transition-duration;
    transition-timing-function: $transition-timing;
  }

  &-colors {
    transition-property: background-color, border-color, color, fill, stroke;
    transition-duration: $transition-duration;
    transition-timing-function: $transition-timing;
  }
} 